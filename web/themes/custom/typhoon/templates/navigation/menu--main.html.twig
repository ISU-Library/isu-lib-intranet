{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.

  * TODO: When a final Menu is decided. Need to be made a11y. Takes a combo of 'role' attributes and JS
  ! nav was refactored on 3/14/21 1) for clarity and readability over brevity 2) 3rd level lists now set the min-height for the 2nd level ul to prevent list from being clipped.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see https://twig.symfony.com/doc/1.x/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      {# ! top level nav #}
      <ul
        class="main-nav--list flex flex-col md:flex-row justify-end m-0 pb-xl md:pb-0 border-t-2 md:border-t-0 border-red-600 md:bg-white"
      >
        {% for item in items %}
          {# ! top level nav item #}
          {% set topNavClasses = [
            'main-nav--item js-main-nav-select relative md:px-0 transition-colors',
            item.is_expanded ? 'main-nav--item_expanded',
            item.is_collapsed ? 'main-nav--item_collapsed',
            item.in_active_trail ? 'main-nav--item_active-trail ',
            item.below ? 'dropdown-menu '
          ] %}

          {% set mainNavTopLinks = [
            'main-nav--link inline-block py-md px-2xl w-full md:w-auto bg-red-500 md:bg-white text-white md:text-red-500 hover:bg-red-600 md:hover:bg-red-500 hover:text-white focus:bg-red-600 md:focus:bg-red-500 focus:text-white ',
            item.in_active_trail ? 'is-active bg-red-500 text-white'
          ] %}

          <li
            {{ item.attributes.addClass(topNavClasses) }}
            {# ! sets aria-controls if there is another nav level #}
            {% if item.below %}
              aria-controls="{{ item.title
                |lower
                |replace({
                  ' ': '-'
                }) }}-dropdown"
              aria-expanded="false"
            {% endif %}
          >
            {# ! mobile nav with icon functionality #}
            <div class="md:hidden main-nav--link flex mt-xs md:mt-0">
              <a
                href="{{ item.url }}"
                class="inline-block py-md px-2xl w-full md:w-auto bg-red-500 md:bg-white text-white md:text-red-500 hover:bg-red-600 md:hover:bg-red-500 hover:text-white focus:bg-red-600 md:focus:bg-red-500 focus:text-white {{
                item.in_active_trail
                  ? 'is-active'
                  : ''
                }}"
              >
                {{ item.title }}
              </a>
              {% if item.below %}
                <button
                  class="icon-wrap flex icon-wrap md:hidden flex-shrink-0 justify-center items-center bg-yellow-500 transition-color duration-300 hover:bg-yellow-600 focus:bg-yellow-600 w-3xl"
                >
                  <i class="fas fa-plus text-red-500 text-lg"></i>
                </button>
              {% else %}
                <a class="md:hidden bg-yellow-500 transition-color duration-300 hover:bg-yellow-600 focus:bg-yellow-600" href="{{ item.url }}">
                  <div
                    class="icon-wrap flex icon-wrap h-full md:hidden flex-shrink-0 justify-center items-center w-3xl"
                  >
                    <i class="fas fa-chevron-right text-red-500 text-lg"></i>
                  </div>
                </a>
              {% endif %}
            </div>
            {# ! Desktop nav without icon functionality #}
            <a
              href="{{ item.url }}"
              class="main-nav--link hidden md:block py-md px-2xl w-full md:w-auto bg-red-500 md:bg-white text-white md:text-red-500 hover:bg-red-600 md:hover:bg-red-500 hover:text-white focus:bg-red-600 md:focus:bg-red-500 focus:text-white {{
              item.in_active_trail
                ? 'is-active'
                : ''
              }}"
            >
              {{ item.title }}
            </a>
            {# ! injects second level nav #}
            {% if item.below %}
              {% set dropdownID = item.title ~ '-dropdown' %}
              {% set attributes =
                attributes.setAttribute('id', dropdownID|lower)
              %}
              {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
            {% endif %}
          </li>
        {% endfor %}
      </ul>
    {% endif %}
  {% endif %}

  {% if items %}
    {% if menu_level == 1 %}
      {# ! second level nav #}
      <ul
        {{ attributes }}
        class="main-nav--dropdown main-nav--sub-list hidden md:absolute overflow-hidden l-0 ml-0 mt-xs md:mt-0 py-0 px-lg md:py-lg list-none md:bg-white rounded-sm md:shadow-light-2"
      >
        {% for item in items %}
          {% set secondNavClasses = [
            'dropdown--item second-nav--item overflow-hidden md:w-1/2',
            item.is_expanded ? 'main-nav--item_expanded',
            item.is_collapsed ? 'main-nav--item_collapsed',
            item.in_active_trail ? 'main-nav--item_active-trail js-active',
            item.below ? 'dropdown-menu '
          ] %}

          {% set secondLevelLinks = [
            'second-nav--link relative block py-sm pl-md md:pl-sm pr-0 text-md font-semibold md:font-normal transition-all duration-300 hover:text-warm-grey-200 md:hover:text-red-500 focus:text-white md:focus:text-red-500',
            item.in_active_trail
              ? 'is-active text-white md:text-red-500'
              : 'text-white md:text-black'
          ] %}

          <li
            {{ item.attributes.addClass(secondNavClasses) }}
            {# ! sets aria-controls if there is another nav level #}
            {% if item.below %}
              aria-controls="{{ item.title
                |lower
                |replace({
                  ' ': '-'
                }) }}-dropdown"
              aria-expanded="false"
            {% endif %}
          >
            {{
              link(
                item.title,
                item.url,
                {
                  class: secondLevelLinks
                }
              )
            }}
            {# ! injects third level nav #}
            {% if item.below %}
              {% set subDropdownID = item.title ~ '-dropdown' %}
              {% set attributes =
                attributes.setAttribute('id', subDropdownID|lower)
              %}
              {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
            {% endif %}
          </li>
        {% endfor %}
      </ul>
    {% endif %}
  {% endif %}

  {% if items %}
    {% if menu_level == 2 %}
      {# ! third level nav #}
      <ul
        {{ attributes }}
        class="main-nav--third-list md:left-[9999px] md:absolute md:w-1/2 top-0 left-1/2 px-lg md:py-lg"
      >
        {% for item in items %}
          {% set thirdNavClasses = [
            'py-sm md:py-xs pl-sm md:pl-0 relative',
            item.is_expanded ? 'main-nav--item_expanded',
            item.is_collapsed ? 'main-nav--item_collapsed',
            item.in_active_trail ? 'main-nav--item_active-trail',
            item.below ? ''
          ] %}

          {% set thirdLevelLinks = [
            'text-white font-normal hover:text-warm-grey-200 md:hover:text-red-500 focus:text-warm-grey-200 md:focus:text-red-500',
            item.in_active_trail
              ? 'is-active text-white md:text-red-500'
              : 'text-white md:text-black'
          ] %}

          <li {{ item.attributes.addClass(thirdNavClasses) }}>
            {{
              link(
                item.title,
                item.url,
                {
                  class: thirdLevelLinks
                }
              )
            }}
          </li>
        {% endfor %}
      </ul>
    {% endif %}
  {% endif %}
{% endmacro %}
